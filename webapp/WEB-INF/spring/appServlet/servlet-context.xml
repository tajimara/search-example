<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
    <!-- base-package 하부에 있는 모든 컴포넌트를 스캔하여 등록한다.  -->
    <context:annotation-config />
    <context:component-scan base-package="io.test.www" use-default-filters="false" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- 컨트롤러는 이족에 정의해줘야 적용된다-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--<beans:bean id="logAdvice" class="LogAdvice"/>-->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
    <beans:import resource="classpath:/kr/pe/kwonnam/freemarker/inheritance/freemarker-layout-directives.xml" />



    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />
    <resources mapping="/static/**" location="/static/" />
    <resources mapping="/robots.txt" location="/robots.txt" order="0"/>

    <beans:bean id="messageSource"
                class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <beans:property name="basename" value="classpath:messages/messages" />
        <beans:property name="defaultEncoding" value="UTF-8"/>
    </beans:bean>
    <beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <beans:property name="defaultLocale" value="ko" />
    </beans:bean>
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
    <mvc:interceptors>
        <beans:bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <beans:property name="paramName" value="hl" />
        </beans:bean>
    </mvc:interceptors>
    <!--모바일과 일반 웹의 교차 -->
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <beans:bean class="org.springframework.mobile.device.DeviceWebArgumentResolver" />
            <beans:bean class="org.springframework.mobile.device.site.SitePreferenceWebArgumentResolver" />
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <beans:bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <beans:bean class="org.springframework.mobile.device.site.SitePreferenceHandlerInterceptor" />
        </mvc:interceptor>
        <!--<beans:bean class="org.springframework.mobile.device.switcher.SiteSwitcherHandlerInterceptor" factory-method="urlPath">
            <beans:constructor-arg value="/m" />
            <beans:constructor-arg value="/" />
        </beans:bean>-->
    </mvc:interceptors>
    <beans:bean class="org.springframework.mobile.device.view.LiteDeviceDelegatingViewResolver">
        <beans:constructor-arg>
            <beans:bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
                <beans:property name="order" value="2" />
                <beans:property name="cache" value="true" />
                <beans:property name="suffix" value=".html" />
                <beans:property name="contentType" value="text/html; charset=UTF-8" />
                <beans:property name="exposeSpringMacroHelpers" value="true" />
                <beans:property name="requestContextAttribute" value="rc" />
            </beans:bean>
        </beans:constructor-arg>
        <beans:property name="mobilePrefix" value="mobile/" />
        <beans:property name="enableFallback" value="true"/>
    </beans:bean>
    <beans:bean id="freemarkerConfig"
                class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <beans:property name="templateLoaderPath" value="/WEB-INF/views" />
        <beans:property name="defaultEncoding" value="UTF-8" />
        <beans:property name="freemarkerVariables">
            <beans:map>
                <beans:entry key="layout" value-ref="freemarkerLayoutDirectives" />
            </beans:map>
        </beans:property>
    </beans:bean>
    <mvc:annotation-driven >
        <mvc:message-converters>
            <beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <beans:property name="supportedMediaTypes">
                    <beans:list>
                        <beans:value>text/plain;charset=UTF-8</beans:value>
                        <beans:value>text/plain;charset=UTF-8</beans:value>
                        <beans:value>text/html;charset=UTF-8</beans:value>
                    </beans:list>
                </beans:property>
            </beans:bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
</beans:beans>
